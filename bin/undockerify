#!/bin/bash

export PI_CMD="${0}"
DIR="$(dirname "${PI_CMD}")"
export PATH="${DIR}:${PATH}"
PDIR="$(dirname "${DIR}")"
export PI_INCLUDE="${PDIR}/inc"
. "${PI_INCLUDE}/msgs.sh"


NAME="${1-pi:build}"
shift

echo "Creating Raspberry Pi image ${PI_IMAGE_FILE} from docker image ${NAME}"
echo "This will take some time."

rpi-image-tool create-image init "${@}" || error "Image initialization failed"

RKEY="/tmp/$$.${RANDOM}."
SCRIPTFILE="${RKEY}.script"
CIDFILE1="${RKEY}.1.cid"
CIDFILE2="${RKEY}.2.cid"
FIFO1="${RKEY}.1.fifo"
FIFO2=${RKEY}.2.fifo"

trap "rm -f '${SCRIPTFILE}' '${CIDFILE1}' '${CIDFILE2}' '${FIFO1}' '${FIFO2}'" exit

mkfifo --mode=600 "${FIFO1}" "${FIFO2}""

cat >"${SCRIPTFILE}" <<'EOF'
#!/bin/bash
# Directories to not export
EXCLUDE=(
    "/undockerify"
    )
EXCLUDES=()
for E in "${EXCLUDE[@]}"; do
    EXCLUDES+=(--exclude "${E}")
done

# Dump the relevant parts of the filesystem to a tar file.
tar --create --file "${FIFO1}" "${EXCLUDES[@]}" -C /boot --checkpoint=5000 --checkpoint-action='echo=%u %T%*\r' .
EOF
chmod a+x "${SCRIPTFILE}"

docker run \
    --cidfile "${CIDFILE1}" \
    --rm \
    -v "${SCRIPTFILE}:/undockerify" \
    -v "${FIFO1}:${FIFO1}" \
    "${NAME}"  \
    /undockerify \
    | rpi-image-tool create-image boot ${FIFO1} || error "Image /boot load failed"

cat >"${SCRIPTFILE}" <<'EOF'
#!/bin/bash
# Directories to not export
EXCLUDE=(
    "boot/*"
    "dev"
    "proc"
    "sys"
    "tmp"
    "run"
    "mnt"
    "media"
    "var/run"
    "var/lock"
    "var/spool"
    "var/cache/ldconfig"
    "var/cache/debconf"
    "var/cache/fontconfig"
    "var/cache/private"
    "var/cache/man"
    "lost+found"
    "etc/fstab"
    "undockerify"
    )
EXCLUDES=()
for E in "${EXCLUDE[@]}"; do
    EXCLUDES+=(--exclude "${E}")
done

# Dump the relevant parts of the filesystem to a tar file.
tar --create --acls --sparse --selinux --xattrs --file "${FIFO2}" "${EXCLUDES[@]}" -C / --checkpoint=5000 --checkpoint-action='echo=%u %T%*\r' .
EOF
chmod a+x "${SCRIPTFILE}"

docker run \
    --cidfile "${CIDFILE2}" \
    --rm \
    -v "${SCRIPTFILE}:/undockerify" \
    -v "${FIFO2}:${FIFO2}" \
    "${NAME}" \
    /undockerify \
    | rpi-image-tool create-image root "${FIFO2}" || error "Image root load failed"
