#!/bin/bash

export PI_CMD="${0}"
DIR="$(dirname "${PI_CMD}")"
export PATH="${DIR}:${PATH}"
PDIR="$(dirname "${DIR}")"
export PI_INCLUDE="${PDIR}/inc"
. "${PI_INCLUDE}/msgs.sh"


NAME="${1-pi:build}"
shift

echo "Creating Raspberry Pi image ${PI_IMAGE_FILE} from docker image ${NAME}"
echo "This will take some time."

rpi-image-tool create-image init "${@}" || error "Image initialization failed"

SCRIPTFILE="/tmp/$$.$RANDOM.script"

trap "rm -f '${SCRIPTFILE}'" exit

cat >"${SCRIPTFILE}" <<'EOF'
#!/bin/bash
# Directories to not export
EXCLUDE=(
    "/undockerify"
    )
EXCLUDES=()
for E in "${EXCLUDE[@]}"; do
    EXCLUDES+=(--exclude "${E}")
done

# Dump the relevant parts of the filesystem to a tar file.
tar --create --file "-" "${EXCLUDES[@]}" -C /boot --checkpoint=5000 --checkpoint-action='echo=%u %T%*\r' .
EOF
chmod a+x "${SCRIPTFILE}"

docker run --cidfile /dev/null --rm -v "${SCRIPTFILE}:/undockerify" "${NAME}"  /undockerify | rpi-image-tool create-image boot - || error "Image /boot load failed"


cat >"${SCRIPTFILE}" <<'EOF'
#!/bin/bash
# Directories to not export
EXCLUDE=(
    "dev/*"
    "proc/*"
    "sys/*"
    "tmp/*"
    "run/*"
    "mnt/*"
    "media/*"
    "var/run"
    "var/lock"
    "var/spool"
    "var/cache/ldconfig/*"
    "var/cache/debconf/*"
    "var/cache/fontconfig/*"
    "var/cache/private/*"
    "var/cache/man/*"
    "lost+found"
    "etc/fstab"
    "/undockerify"
    )
EXCLUDES=()
for E in "${EXCLUDE[@]}"; do
    EXCLUDES+=(--exclude "${E}")
done

# Dump the relevant parts of the filesystem to a tar file.
tar --create --acls --sparse --selinux --xattrs --file "-" "${EXCLUDES[@]}" -C / --checkpoint=5000 --checkpoint-action='echo=%u %T%*\r' .
EOF
chmod a+x "${SCRIPTFILE}"

CIDFILE="/tmp/$$.$RANDOM.cid"

trap "rm -f '${CIDFILE}'" exot

docker run --cidfile "${CIDFILE}" --rm -v "${SCRIPTFILE}:/undockerify" "${NAME}"  /undockerify | rpi-image-tool create-image root - || error "Image root load failed"
