#!/bin/bash

#### Set the partition size of the Linux partition (the second partition)
####   Usage: ${PI_INVOKER} add|set <size> [B|K|M|G]
####   Usage: ${PI_INVOKER} show [B|K|M|G]
#### The defauilt units is K (1024 bytes).

. "${PI_INCLUDES}/vars.sh"


SUBCMD="${1^^}"

case "${SUBCMD}" in
    ADD|SET)
        AMT="${2}"
        UNITS="${3^^}"
        ;;
    SHOW)
        UNITS="${2^^}"
        ;;
    --help|'-?'|HELP)
        usage
        ;;
    *)
        usage
        ;;
esac

MAYBE_UNITS="${AMT: -1}"
case "${MAYBE_UNITS^^}" in
    B|K|M|G)
        UNITS="${MAYBE_UNITS^^}"
        AMT="${AMT:0:-1}"
        ;;
esac

df

UNITS=${UNITS:-K}

case "${UNITS}" in
    B)
        FACTOR=$(( 1 ))
        ;;
    K)
        FACTOR=$(( 1024 ))
        ;;
    M)
        FACTOR=$(( 1024*1024 ))
        ;;
    G)
        FACTOR=$(( 1024*1024*1024 ))
        ;;
    *)
        usage
        ;;
esac

PARTITIONS="/tmp/$$.tmp"

cleanup() {
    rm -rf "${PARTITIONS}"
}

trap cleanup EXIT

fdisk /data/img >/dev/null <<EOF
O
${PARTITIONS}
EOF

{
    while read L; do
        case "${L}" in
            'label-id: '*)
                LABELID="${L#label-id: }"
                ;;
            /data/img1*)
                PART1="${L#/data/img1 : }"
                ;;
            /data/img2*)
                PART2="${L#/data/img2 : }"
                ;;
            esac
    done
}<"${PARTITIONS}"

parse() {
    local l=$1
    local -n outvar=$2
    local -A out
    local IFS=','
    local -a sections=($l)
    local IFS='='
    local -a k0=(${sections[0]})
    local -a k1=(${sections[1]})
    local -a k2=(${sections[2]})
    # Extract the fields as keys, discading space characters.
    out=(
        [${k0[0]// }]="${k0[1]// }"
        [${k1[0]// }]="${k1[1]// }"
        [${k2[0]// }]="${k2[1]// }"
    )
    outvar=(
        [${k0[0]// }]="${k0[1]// }"
        [${k1[0]// }]="${k1[1]// }"
        [${k2[0]// }]="${k2[1]// }"
    )
}

declare -A PARTITION1
declare -A PARTITION2
parse "${PART1}" PARTITION1
parse "${PART2}" PARTITION2

ROOTSIZE_BYTES=$(( 512 * ${PARTITION2[size]} ))

BOOTSIZE=$(( 512 * ${PARTITION1[size]} / ${FACTOR} ))
ROOTSIZE=$(( 512 * ${PARTITION2[size]} / ${FACTOR} ))

case "${SUBCMD}" in
    SHOW)
        echo "LABEL=${LABELID}"
        echo "BOOT=${BOOTSIZE} ${UNITS}"
        echo "ROOT=${ROOTSIZE} ${UNITS}"
        case "${UNITS}" in
            K|M|G)
                echo "  (Sizes rounded down to the nearest whole ${UNITS})"
                ;;
        esac
        exit 0
        ;;
    SET)
        NEWSIZE=$(( ${AMT} * ${FACTOR} ))
        ;;
    ADD)
        NEWSIZE=$(( ${ROOTSIZE_BYTES} + ${AMT} * ${FACTOR} ))
        ;;
    *)
        usage
        ;;
esac

echo "LABEL=${LABELID}"
echo "BOOT=${BOOTSIZE}${UNITS}"
echo "ROOT=${ROOTSIZE}${UNITS} (old)"
echo "ROOT=$(( ${NEWSIZE} / ${FACTOR} ))${UNITS} (new)"

NEWPART="label: dos
label-id: ${LABELID}
device: /data/img
unit: sectors

/data/img1 : start=${PARTITION1[start]}, size=${PARTITION1[size]}, type=${PARTITION1[type]}
/data/img2 : start=${PARTITION2[start]}, size=${NEWSIZE}, type=${PARTITION2[type]}
"

do_unmount "${PI_ROOT}"
