#!/bin/bash

#### Create a docker image to run the current image file.
#### Any pending changes will be committed first.
####   Usage: ${PI_INVOKER} [<imageName>]
####     The default for <imageName> is pi:latest

export PI_CMD="$0"
DIR="$(dirname "$(dirname "${PI_CMD}")")"
export PI_INCLUDES="${DIR}/inc"
BIN="${DIR}/bin"
PI_PLATFORM="${PI_PLATFORM:-"linux/arm64"}"

. "${PI_INCLUDES}/vars.sh"

MESSAGE="Via dockerfy: $(${BIN}/rpi-image-tool cat /work/image_src.txt)"

declare -a options=()

while [ "${1:0:2}" = '--' ]; do
    case "${1}" in
        -c)
            shift
            set -- -c --change "${@}"
            ;;
        -m)
            shift
            set -- -c --message "${@}"
            ;;
        --platform)
            PI_PLATFORM="${2}"
            shift
            ;;
        --message|--change)
            MESSAGE="${2}"
            shift
            ;;
        --*=*|-*=*)
            options+=( $(echo "${1}" | sed -E 's/=/ /') )
            ;;
       --*)
            echo "Unknown option: ${1}" 1>&2
            exit 2
            ;;
        # Split off combined short options
        -??*)
            ARG="${1}"
            shift
            set -- "${ARG}" "${ARG:0:2}" "-${ARG:2}" "${@}"
            ;;
    esac
    shift
done

NAME="${1:-pi:latest}"
shift

if [ ! -z "$*" ]; then
    echo "Extra arguments after the name:" "${@}" 1>&2
    exit 2
fi

options+=(
    --platform "${PI_PLATFORM}"
    --message "${MESSAGE}"
    )

echo "Creating docker image ${NAME} from the current disk image"
echo "This will take some time."

"${BIN}/rpi-image-tool" commit

msg "Exporting files and importing into docker container ${NAME}"
"${BIN}/rpi-image-tool" export-docker - \
| docker import - --platform "${PI_PLATFORM}" "${NAME}" \
|| error "Export failed." || exit

msg "The image can be run via 'pi ${NAME}'"
